meta {
  name: Firebase function Notion
  type: http
  seq: 2
}

get {
  url: {{api_url}}?target=notion
  body: none
  auth: none
}

params:query {
  target: notion
}

tests {
  test("Status code is 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Response is valid JSON", function() {
    expect(res.getBody()).to.be.an("object");
  });

  test("Response has section field", function() {
    expect(res.getBody()).to.have.property("tech_stack");
    expect(res.getBody()).to.have.property("experience");
    expect(res.getBody()).to.have.property("hobbies");
    expect(res.getBody()).to.have.property("education");
    expect(res.getBody()).to.have.property("stuff");
  });

  test("Tech stack is an array", function() {
    const body = res.getBody();
    expect(body.tech_stack).to.be.an("array");
  });

  test("Tech stack contains Java", function() {
    const body = res.getBody();
    const javaTech = body.tech_stack.find(tech => tech.name === 'Java');
    expect(javaTech).to.exist;
    expect(javaTech).to.have.property('url', 'https://www.java.com/');
    expect(javaTech).to.have.property('description', '');
    expect(javaTech).to.have.property('rank', 1);
  });

}

settings {
  encodeUrl: true
}

docs {
  # Firebase Function Notion API Test

  This request tests a Firebase function endpoint that retrieves data from Notion.

  ## Expected Response

  The API should return a JSON object containing various sections of data, including:
  - `tech_stack`: An array of technologies with details such as name, URL, description, and rank.
  - `experience`: An array of professional experiences.
  - `hobbies`: An array of hobbies.
  - `education`: An array of educational qualifications.
  - `stuff`: An array of miscellaneous items.

  ## Tests Performed

  1. Verify HTTP status code is 200
  2. Verify response is valid JSON
  3. Verify response contains key sections: `tech_stack`, `experience`, `hobbies`, `education`, and `stuff`
  4. Verify `tech_stack` is an array
  5. Verify `tech_stack` contains an entry for "Java" with correct properties
}
